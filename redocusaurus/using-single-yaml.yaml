openapi: 3.0.1
info:
  title: mpc2
  version: '1.05'
servers:
  - url: https://nk0fs4t630.execute-api.us-east-1.amazonaws.com/product2
paths:
  /:
    get:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        '200':
          description: 200 response
          headers:
            Json:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Empty'
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Empty'
            video/mp4:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: Empty
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: Empty
  /account:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAccount'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      parameters:
        - name: password
          in: query
          required: true
          schema:
            type: string
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID'
      x-amazon-apigateway-request-validator: Validate query string parameters and headers
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /account/profile:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: Token
  /account/reset:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: Token
  /account/signin:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSignin'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-request-validator: Validate body
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: AccountSignin
  /account/signup:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSignup'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-request-validator: Validate body
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: AccountSignup
  /account/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /criteria:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfCriteria'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      parameters:
        - name: criteria_type
          in: query
          required: true
          schema:
            type: string
        - name: duration
          in: query
          required: true
          schema:
            type: string
        - name: magnitude
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-request-validator: Validate query string parameters and headers
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /criteria/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Criteria'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    put:
      parameters:
        - name: criteria_type
          in: query
          schema:
            type: string
        - name: duration
          in: query
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: magnitude
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /hardware:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfHardware'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: max_resolution
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID'
      x-amazon-apigateway-request-validator: Validate query string parameters and headers
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /hardware/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hardware'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    put:
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: max_resolution
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /image:
    get:
      responses:
        '200':
          description: 200 response
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Empty'
            image/png:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /image/{image_name}:
    get:
      parameters:
        - name: image_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Empty'
            image/png:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /notification:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfNotification'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      parameters:
        - name: hardware_id
          in: query
          schema:
            type: string
        - name: notification_type
          in: query
          required: true
          schema:
            type: string
        - name: criteria_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID'
      x-amazon-apigateway-request-validator: Validate query string parameters and headers
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /notification/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    put:
      parameters:
        - name: notification_type
          in: query
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: criteria_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /notification/{id}/add/{hardware_id}:
    post:
      parameters:
        - name: hardware_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /notification/{id}/hardware:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfHardware'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /notification/{id}/hardware/{hardware_id}:
    delete:
      parameters:
        - name: hardware_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /path:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /recording:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfRecording'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      parameters:
        - name: hardware_id
          in: query
          required: true
          schema:
            type: string
        - name: year
          in: query
          schema:
            type: string
        - name: hour
          in: query
          schema:
            type: string
        - name: minute
          in: query
          schema:
            type: string
        - name: file_name
          in: query
          required: true
          schema:
            type: string
        - name: second
          in: query
          schema:
            type: string
        - name: month
          in: query
          schema:
            type: string
        - name: date
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID'
      x-amazon-apigateway-request-validator: Validate query string parameters and headers
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /recording/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recording'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    put:
      parameters:
        - name: hardware_id
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: string
        - name: date
          in: query
          schema:
            type: string
        - name: file_name
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /resolution:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfResolution'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      parameters:
        - name: height
          in: query
          required: true
          schema:
            type: string
        - name: width
          in: query
          required: true
          schema:
            type: string
        - name: resolution_name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-request-validator: Validate query string parameters and headers
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /resolution/{name}:
    get:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resolution'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    put:
      parameters:
        - name: width
          in: query
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: height
          in: query
          schema:
            type: string
        - name: resolution_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    delete:
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /saving_policy:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfSavingPolicy'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      parameters:
        - name: max_time
          in: query
          required: true
          schema:
            type: string
        - name: resolution_name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID'
      x-amazon-apigateway-request-validator: Validate query string parameters and headers
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /saving_policy/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingPolicy'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    put:
      parameters:
        - name: max_time
          in: query
          schema:
            type: string
        - name: resolution_name
          in: query
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /saving_policy/{id}/add/{hardware_id}:
    post:
      parameters:
        - name: hardware_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /saving_policy/{id}/hardware:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfHardware'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /saving_policy/{id}/hardware/{hardware_id}:
    delete:
      parameters:
        - name: hardware_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /storage/{item}:
    get:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Content-Type:
              schema:
                type: string
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Empty'
            image/png:
              schema:
                $ref: '#/components/schemas/Empty'
            video/mp4:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws
        credentials: arn:aws:iam::052524269538:role/API-Gateway-S3
        httpMethod: GET
        uri: arn:aws:apigateway:us-east-1:s3:path/mpc-capstone/{object}
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
        requestParameters:
          integration.request.path.object: method.request.path.item
        passthroughBehavior: when_no_match
    put:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws
        credentials: arn:aws:iam::052524269538:role/API-Gateway-S3
        httpMethod: PUT
        uri: arn:aws:apigateway:us-east-1:s3:path/mpc-capstone/{object}
        responses:
          default:
            statusCode: '200'
        requestParameters:
          integration.request.path.object: method.request.path.item
        passthroughBehavior: when_no_match
    post:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws
        credentials: arn:aws:iam::052524269538:role/API-Gateway-S3
        httpMethod: PUT
        uri: arn:aws:apigateway:us-east-1:s3:path/mpc-capstone/{object}
        responses:
          default:
            statusCode: '200'
        requestParameters:
          integration.request.path.object: method.request.path.item
        passthroughBehavior: when_no_match
    delete:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws
        credentials: arn:aws:iam::052524269538:role/API-Gateway-S3
        httpMethod: DELETE
        uri: arn:aws:apigateway:us-east-1:s3:path/mpc-capstone/{object}
        responses:
          default:
            statusCode: '200'
        requestParameters:
          integration.request.path.object: method.request.path.item
        passthroughBehavior: when_no_match
  /video:
    get:
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
            video/mp4:
              schema:
                $ref: '#/components/schemas/Empty'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
            video/mp4:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /video/{video_name}:
    get:
      parameters:
        - name: video_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
            video/mp4:
              schema:
                $ref: '#/components/schemas/Empty'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
            video/mp4:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /{proxy+}:
    x-amazon-apigateway-any-method:
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses: {}
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:052524269538:function:mpc2/invocations
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        cacheNamespace: xjz7b2
        cacheKeyParameters:
          - method.request.path.proxy
        contentHandling: CONVERT_TO_TEXT
components:
  schemas:
    Account:
      type: object
      properties:
        account_id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        email:
          type: string
        status:
          type: string
        token:
          type: string
    ArrayOfHardware:
      type: array
      items:
        $ref: '#/components/schemas/Hardware'
    Token:
      type: object
      properties:
        token:
          type: string
    Criteria:
      type: object
      properties:
        criteria_id:
          type: integer
          format: int32
        criteria_type:
          type: integer
          format: int32
        magnitude:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
    SavingPolicy:
      type: object
      properties:
        saving_policy_id:
          type: integer
          format: int32
        max_time:
          type: integer
          format: int32
        resolution_name:
          type: string
    Notification:
      type: object
      properties:
        notification_id:
          type: integer
          format: int32
        notification_type:
          type: integer
          format: int32
        criteria_id:
          type: integer
          format: int32
    ArrayOfCriteria:
      type: array
      items:
        $ref: '#/components/schemas/Criteria'
    Empty:
      type: object
    AccountSignup:
      required:
        - email
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    ArrayOfAccount:
      type: array
      items:
        $ref: '#/components/schemas/Account'
    AccountSignin:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Event:
      type: object
      properties:
        server_information:
          type: string
    Hardware:
      type: object
      properties:
        hardware_id:
          type: integer
          format: int64
        name:
          type: string
        account_id:
          type: integer
          format: int64
        max_resolution:
          type: string
    ArrayOfResolution:
      type: array
      items:
        $ref: '#/components/schemas/Resolution'
    ID:
      type: object
      properties:
        ID:
          type: integer
          format: int32
    Recording:
      type: object
      properties:
        recording_id:
          type: integer
          format: int32
        hardware_id:
          type: integer
          format: int32
        account_id:
          type: integer
          format: int32
        file_name:
          type: string
        timestamp:
          type: string
          format: date-time
        date:
          type: string
          format: date
    ArrayOfSavingPolicy:
      type: array
      items:
        $ref: '#/components/schemas/SavingPolicy'
    ArrayOfRecording:
      type: array
      items:
        $ref: '#/components/schemas/Recording'
    ArrayOfNotification:
      type: array
      items:
        $ref: '#/components/schemas/Notification'
    Resolution:
      type: object
      properties:
        resolution_name:
          type: string
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
x-amazon-apigateway-request-validators:
  Validate body:
    validateRequestParameters: false
    validateRequestBody: true
  Validate query string parameters and headers:
    validateRequestParameters: true
    validateRequestBody: false
x-amazon-apigateway-binary-media-types:
  - image/jpeg
  - image/png
  - video/mp4
  - image/gif
